name: ðŸš€ Release VS Code Extension

on:
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  PROJECT_NAME: jxscout-vscode

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run package

      - name: Package extension
        run: npx @vscode/vsce package

      # - name: Create release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: v${{ steps.get_version.outputs.VERSION }}
      #     name: Release v${{ steps.get_version.outputs.VERSION }}
      #     draft: false
      #     prerelease: false
      #     files: |
      #       ${{ env.PROJECT_NAME }}-*.vsix
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find VSIX
        id: find_vsix
        run: |
          VSIX_PATH=$(find . -name "*.vsix" | grep -v "sources" | grep -v "javadoc" | grep -v "/original-.*\.vsix" | head -n 1)
          if [[ -z "$VSIX_PATH" ]]; then
            echo "No vsix file found!"
            exit 1
          fi
          echo "vsix_path=${VSIX_PATH}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.get_version.outputs.VERSION }}
          commit: ${{ github.sha }}
          body: "Release ${{ steps.get_version.outputs.VERSION }}"
          artifacts: |
            ${{ steps.find_vsix.outputs.vsix_path }}
